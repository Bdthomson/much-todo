<h1>
    The vanilla app is a prereq to this. Don't start on this without finishing that first.
    Here, you're going to reimplement the same app, but using Backbone, Marionette, and Less.
    Try and use these frameworks to address the painpoints you experienced in the vanilla version!
</h1>
<h1>
    Make an application with the following requirements:
</h1>
<ul>
    <li>
        Maintain a list of todos
    </li>
    <li>
        Todos consist of plain text
    </li>
    <li>
        Allow users to add new todos to the list
    </li>
    <li>
        Allow users to mark / unmark todos as complete
    </li>
    <li>
        The list should be sorted in most recently created order, like a stack.
    </li>
    <li>
        Allow users to mark / unmark all todos as complete in one action
    </li>
    <li>
        Provide the ability to filter the list by completed or uncompleted
    </li>
    <li>
        Implement routing that allows the user to go to those filters.
    </li>
    <li>
        Allow users to delete todos
    </li>
    <li>
        Indicate somewhere how many todos are uncompleted
    </li>
    <li>
        Allow users to edit the text of an existing todo
    </li>
</ul>
<h1>
    Go to the src directory and start editing index.html / index.js / index.less / application component to get
    started.
</h1>
<h1 class="docs">
    Check out the following sites for docs:
    <div><a href="http://backbonejs.org/" target="_blank">Backbone</a></div>
    <div><a href="https://marionettejs.com/docs/v2.4.7/" target="_blank">Marionette</a></div>
    <div><a href="http://lesscss.org/" target="_blank">Less</a></div>
</h1>